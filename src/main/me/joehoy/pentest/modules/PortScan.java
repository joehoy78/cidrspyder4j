package me.joehoy.pentest.modules;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.nmap4j.Nmap4j;
import org.nmap4j.core.nmap.NMapExecutionException;
import org.nmap4j.core.nmap.NMapInitializationException;
import org.nmap4j.data.NMapRun;
import org.nmap4j.data.host.ports.Port;
import org.nmap4j.data.nmaprun.Host;

public class PortScan {
	
	static List<String> shodanTcp(String ipAddress, String apiKey) throws ParseException, IOException {
		List<String> output = new ArrayList<String>();
		String baseUrlString = "https://api.shodan.io/shodan/host/{ip}?key={YOUR_API_KEY}";
		String urlString = baseUrlString.replace("{ip}", ipAddress).replace("{YOUR_API_KEY}", apiKey);
		URL url = new URL(urlString);
		JSONParser parser = new JSONParser();
		JSONObject results = (JSONObject) parser.parse(UrlUtils.doGetRequest(url));
		JSONArray data = (JSONArray) results.get("data");
		Iterator<JSONObject> iterator = data.iterator();
		while (iterator.hasNext()) {
			JSONObject item = (JSONObject) iterator.next();
			if (((String) item.get("transport")).toLowerCase().equals("tcp")) {				
				output.add((String) item.get("port"));
			}
		}
		return output;
	}
	
	//TODO: implement speed control
	static List<String> nmapTcp(String nmapPath, String ipAddress) throws NMapInitializationException, NMapExecutionException {
		List<String> output = new ArrayList<String>();
		Nmap4j nmap4j = new Nmap4j(nmapPath);
		nmap4j.includeHosts(ipAddress);
		nmap4j.addFlags("-sS -Pn -n -T4 --open -P0 -p 80,443,4443,4343,8080,8443");
		nmap4j.execute();
		
		NMapRun nmapRun = nmap4j.getResult();
		
		for (Host host : nmapRun.getHosts()) {
			ArrayList<Port> ports = host.getPorts().getPorts();
			for (Port port : ports) {
				output.add("" + port.getPortId());
			}
		}
		
		return output;
	}
	
	static String checkHttp(String host, String port) {
		String httpUrlString = UrlUtils.makeHttpBaseUrl(host, port);
		String httpsUrlString = UrlUtils.makeHttpsBaseUrl(host, port);
		URL url;
		try {
			url = new URL(httpsUrlString);
			UrlUtils.doGetRequest(url);
			return "https";
		} catch (IOException e) {
			System.out.println("DEBUG : HTTPS request for " + httpsUrlString + "failed.");
		}
		try {
			url = new URL(httpUrlString);
			UrlUtils.doGetRequest(url);
			return "http";
		} catch (IOException e) {
			System.out.println("DEBUG : HTTP request for " + httpUrlString + "failed.");
		} 
		return "other";
	}

}
