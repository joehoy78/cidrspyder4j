package me.joehoy.pentest.modules;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class DirbProcess {
	
	static boolean checkDirb() {
		return true;
	}
	
	static boolean checkOsWrite() {
		return true;
	}
	
	static List<String> prepareUrls(List<String> urlList) throws MalformedURLException, URISyntaxException {
		Set<String> preparedUrlSet = new HashSet<String>();
		List<String> preparedUrlList = new ArrayList<String>();
		
		for(String urlString : urlList) {
			URL url = new URL(urlString);
			String urlPath = url.getPath();
			if (urlPath.length() > 1) {
				if (urlPath.endsWith("/")) {
					preparedUrlSet.add(urlString);
				} else {
					String[] tokens = urlPath.split("//");
					StringBuilder sb = new StringBuilder(64);
					for (int i=0; i < (tokens.length - 1); i++) {
						sb.append(tokens[i]);
						sb.append("/");
					}
					URI uri = new URI(url.getProtocol(), url.getHost(), sb.toString(), "");
					preparedUrlSet.add(uri.toURL().toExternalForm());
				}
			} else {
				preparedUrlSet.add(urlString);
			}			
		}
		preparedUrlList.addAll(preparedUrlSet);
		return preparedUrlList;
	}
	
	static String executeDirb(String dirbPath, String dirbExecutable, String url, String wordList, String proxy, String proxyPort, String userAgent, int delay) throws IOException {
		StringBuilder sb = new StringBuilder(32);
		sb.append(dirbPath);
		sb.append(System.getProperty("path.separator"));
		sb.append(dirbExecutable);
		String fullDirbPath = sb.toString();
		
		String[] params = {fullDirbPath, url, wordList, "-a", userAgent, "-z", "" + delay, "-w"};
		List<String> paramList = Arrays.asList(params);
		
		//TODO: Handle proxy
		
		ProcessBuilder pb = new ProcessBuilder(paramList);
		Process process = pb.start();
		BufferedReader reader = 
                new BufferedReader(new InputStreamReader(process.getInputStream()));
		sb = new StringBuilder();
		String line = null;
		while ( (line = reader.readLine()) != null) {
		   sb.append(line);
		   sb.append(System.getProperty("line.separator"));
		}
		return sb.toString();
	}
	
	static List<String> processDirbResults(String results) {
		List<String> processedResults = new ArrayList<String>();
		String[] lines = results.split(System.getProperty("line.separator"));
		for (String line : lines) {
			if (line.startsWith("==>")) {
				processedResults.add(line.split(" ")[2]);
			}
			if (line.startsWith("+")) {
				String urlString = line.split(" ")[1];
				if (urlString.toLowerCase().startsWith("http")) {
					processedResults.add(urlString);
				}
			}
		}
		return processedResults;
	}

}
