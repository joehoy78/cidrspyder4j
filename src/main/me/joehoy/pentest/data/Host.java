package me.joehoy.pentest.data;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import me.joehoy.pentest.modules.UrlUtils;

public class Host {
	
	private String ipAddress;
	private String fqdn = null;
	private List<String> tcp = new ArrayList<String>();
	private List<String> http = new ArrayList<String>();
	private List<String> https = new ArrayList<String>();
	private List<String> discoveredUrls = new ArrayList<String>();
	
	public Host(String ipAddress, String fqdn) {
		this.ipAddress = ipAddress;
		this.fqdn = fqdn;
	}
	
	public void generateUrls() {
		String target;
		String url;
		if (fqdn != null) {
			target = fqdn;
		} else {
			target = ipAddress;
		}
		
		for (String port : http) {
			if ("80".equals(port)) {				
				url = UrlUtils.makeHttpBaseUrl(target);
			} else {
				url = UrlUtils.makeHttpBaseUrl(target, port);
			}
			discoveredUrls.add(url);
		}
		
		for (String port : https) {
			if ("443".equals(port)) {				
				url = UrlUtils.makeHttpsBaseUrl(target);
			} else {
				url = UrlUtils.makeHttpsBaseUrl(target, port);
			}
			discoveredUrls.add(url);
		}
	}
	
	public void validateUrls() throws MalformedURLException {
		discoveredUrls = this.sanitise(discoveredUrls);
	}
	
	public static List<String> sanitise(List<String> urlList) throws MalformedURLException {
		Set<String> sanitisedUrlSet = new HashSet<String>();
		List<String> sanitisedUrlList = new ArrayList<String>();
		
		for(String urlString : urlList) {
			URL url = new URL(urlString);
			sanitisedUrlSet.add(url.toExternalForm());
		}
		sanitisedUrlList.addAll(sanitisedUrlSet);
		return sanitisedUrlList;
	}
	
	public String toString() {
		StringBuilder sb = new StringBuilder(256);
		sb.append(ipAddress);
		if (fqdn != null) {
			sb.append(" (");
			sb.append(fqdn);
			sb.append(")");
		}
		return sb.toString();
	}

}
